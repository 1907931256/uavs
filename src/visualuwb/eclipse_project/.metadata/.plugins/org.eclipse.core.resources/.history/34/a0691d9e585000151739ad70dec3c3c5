#!/usr/bin/env python
from matplotlib.lines import lineStyles
from numpy import *
from pykalman import KalmanFilter
from pykalman import UnscentedKalmanFilter,AdditiveUnscentedKalmanFilter
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import rospy
import tf
import tf2_ros as tf2
import geometry_msgs.msg
import turtlesim.msg
import rospy
import tf2_ros
import geometry_msgs.msg
import math

if __name__ == '__main__':
    rospy.init_node('uav_tf')
    br = tf2.TransformBroadcaster()
    
    ned = geometry_msgs.msg.TransformStamped()
    ned.header.frame_id = "ned"
    ned.child_frame_id = "map"
    

    rate = rospy.Rate(10.0)
    while not rospy.is_shutdown():
        x = rospy.Time.now().to_sec() * math.pi

        ned.header.stamp = rospy.Time.now()
        ned.transform.translation.x = 10 * math.sin(x)
        ned.transform.translation.y = 10 * math.cos(x)
        ned.transform.translation.z = 0.0
        ned.transform.rotation.x = 0.0
        ned.transform.rotation.y = 0.0
        ned.transform.rotation.z = 0.0
        ned.transform.rotation.w = 1.0

        br.sendTransform(ned)
        rate.sleep()
        
        
